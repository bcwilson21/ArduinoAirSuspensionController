// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.4.2
// LVGL version: 9.1.0
// Project name: SquareLine_Project

#include "Scr.h"
#include "ui/ui.h" // sketchy backwards import may break in the future

Scr::Scr(lv_image_dsc_t navbarImage, bool showPressures)
{
    this->navbarImage = navbarImage;
    this->showPressures = showPressures;
}

void Scr::init()
{
    this->scr = lv_obj_create(NULL);
    lv_obj_remove_flag(this->scr, LV_OBJ_FLAG_SCROLLABLE); /// Flags

    // background color
    this->rect_bg = lv_obj_create(this->scr);
    lv_obj_remove_style_all(this->rect_bg);
    lv_obj_set_size(this->rect_bg, 240, 320);
    lv_obj_set_align(this->rect_bg, LV_ALIGN_TOP_MID);
    lv_obj_get_style_border_width(this->rect_bg, 0);
    lv_obj_set_style_bg_color(this->rect_bg, lv_color_hex(0x1F1F1F), LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_remove_flag(this->rect_bg, (lv_obj_flag_t)(LV_OBJ_FLAG_CLICKABLE | LV_OBJ_FLAG_SCROLLABLE)); /// Flags
    lv_obj_set_style_bg_opa(this->rect_bg, 255, LV_PART_MAIN | LV_STATE_DEFAULT);

    // navbar image
    this->icon_navbar = lv_image_create(this->scr);
    lv_image_set_src(this->icon_navbar, &this->navbarImage);
    lv_obj_set_align(this->icon_navbar, LV_ALIGN_BOTTOM_MID);

    this->alert = new Alert(this);

    if (this->showPressures)
    {
        // air pressures at top
        const int xPadding = 72; // pixels from center to end up centered above left/right buttons
        // for some reas the text is not letting me specify something like "top right" then centering the text over that coordinate. Instead we must use top mid so that it is centered on ittself (ie grows both left and right with width chantge) and then set the offset of that from center.
        setupPressureLabel(this->scr, &this->ui_lblPressureFrontDriver, -xPadding, 10, LV_ALIGN_TOP_MID, "0");
        setupPressureLabel(this->scr, &this->ui_lblPressureRearDriver, -xPadding, 40, LV_ALIGN_TOP_MID, "0");
        setupPressureLabel(this->scr, &this->ui_lblPressureFrontPassenger, xPadding, 10, LV_ALIGN_TOP_MID, "0");
        setupPressureLabel(this->scr, &this->ui_lblPressureRearPassenger, xPadding, 40, LV_ALIGN_TOP_MID, "0");
        setupPressureLabel(this->scr, &this->ui_lblPressureTank, 0, 10, LV_ALIGN_TOP_MID, "0");
    }
}

// down = true when just pressed, false when just released
void Scr::runTouchInput(SimplePoint pos, bool down)
{
    if (down)
    {
        if (isKeyboardHidden())
        {
            if (sr_contains(navbarbtn_home, pos))
            {
                changeScreen(SCREEN_HOME);
            }
            if (sr_contains(navbarbtn_presets, pos))
            {
                changeScreen(SCREEN_PRESETS);
            }
            if (sr_contains(navbarbtn_settings, pos))
            {
                changeScreen(SCREEN_SETTINGS);
            }
        }
    }
}

void Scr::loop()
{
    SimplePoint tp = {touchX(), touchY()};
    if (isJustPressed())
    {
        this->runTouchInput(tp, true);
    }
    if (isJustReleased())
    {
        this->runTouchInput(tp, false);
    }
    this->updatePressureValues();
    this->alert->loop();
}

void updatePressure(Scr *scr, lv_obj_t *obj, int index, bool isHeightSensorPercentage)
{
    if (scr->prevPressures[index] != currentPressures[index])
    {
        if (isHeightSensorPercentage)
        {
            lv_label_set_text_fmt(obj, "%u%%", currentPressures[index]);
        }
        else if (getunitsMode() == UNITS_MODE::PSI)
        {
            lv_label_set_text_fmt(obj, "%u PSI", currentPressures[index]);
        }
        else
        { // UNITS_MODE::BAR but %f doesn't work

            float val = currentPressures[index] / 14.5038f;
            val = val * 100; // move decimal over 2
            int b = (int)val % 100;
            int a = ((int)val - b) / 100;
            lv_label_set_text_fmt(obj, "%i.%i Bar", a, b);
        }
        scr->prevPressures[index] = currentPressures[index];
    }
}

void Scr::updatePressureValues()
{
    if (this->showPressures)
    {
        bool hs = statusBittset & (1 << StatusPacketBittset::HEIGHT_SENSOR_MODE);
        updatePressure(this, this->ui_lblPressureFrontPassenger, WHEEL_FRONT_PASSENGER, hs);
        updatePressure(this, this->ui_lblPressureRearPassenger, WHEEL_REAR_PASSENGER, hs);
        updatePressure(this, this->ui_lblPressureFrontDriver, WHEEL_FRONT_DRIVER, hs);
        updatePressure(this, this->ui_lblPressureRearDriver, WHEEL_REAR_DRIVER, hs);
        updatePressure(this, this->ui_lblPressureTank, _TANK_INDEX, false);
    }
}