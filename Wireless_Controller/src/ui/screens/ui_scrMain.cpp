// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.4.2
// LVGL version: 9.1.0
// Project name: SquareLine_Project

#include "ui_scrMain.h"
#include "ui/ui.h" // sketchy backwards import may break in the future

ScrMain scrMain;

void ui_scrMain_event_Rotate(lv_event_t *e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t *target = (lv_obj_t *)lv_event_get_target(e);
    if (event_code == LV_EVENT_CLICKED)
    {
        OnRotateClicked(e);
    }
}
void ui_scrMain_event_btnCount(lv_event_t *e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t *target = (lv_obj_t *)lv_event_get_target(e);
    if (event_code == LV_EVENT_CLICKED)
    {
        OnAddOneClicked(e);
        changeScreen(SCREEN_HOME);
        log_i("Changing screen to home!");
    }
}

void ui_scrMain_screen_init(void)
{
    scrMain.ui_scrMain = lv_obj_create(NULL);
    lv_obj_remove_flag(scrMain.ui_scrMain, LV_OBJ_FLAG_SCROLLABLE); /// Flags

    scrMain.ui_pnlMain = lv_obj_create(scrMain.ui_scrMain);
    lv_obj_set_width(scrMain.ui_pnlMain, lv_pct(90));
    lv_obj_set_height(scrMain.ui_pnlMain, lv_pct(90));
    lv_obj_set_align(scrMain.ui_pnlMain, LV_ALIGN_CENTER);
    lv_obj_remove_flag(scrMain.ui_pnlMain, LV_OBJ_FLAG_SCROLLABLE); /// Flags

    scrMain.ui_lblMilliseconds = lv_label_create(scrMain.ui_pnlMain);
    lv_obj_set_width(scrMain.ui_lblMilliseconds, LV_SIZE_CONTENT);  /// 1
    lv_obj_set_height(scrMain.ui_lblMilliseconds, LV_SIZE_CONTENT); /// 1
    lv_label_set_text(scrMain.ui_lblMilliseconds, "Milliseconds:\n");

    scrMain.ui_lblMillisecondsValue = lv_label_create(scrMain.ui_pnlMain);
    lv_obj_set_width(scrMain.ui_lblMillisecondsValue, LV_SIZE_CONTENT);  /// 1
    lv_obj_set_height(scrMain.ui_lblMillisecondsValue, LV_SIZE_CONTENT); /// 1
    lv_obj_set_align(scrMain.ui_lblMillisecondsValue, LV_ALIGN_TOP_MID);
    lv_label_set_text(scrMain.ui_lblMillisecondsValue, "Text");

    scrMain.ui_lblCdr = lv_label_create(scrMain.ui_pnlMain);
    lv_obj_set_width(scrMain.ui_lblCdr, LV_SIZE_CONTENT);  /// 1
    lv_obj_set_height(scrMain.ui_lblCdr, LV_SIZE_CONTENT); /// 1
    lv_obj_set_x(scrMain.ui_lblCdr, 0);
    lv_obj_set_y(scrMain.ui_lblCdr, 30);
    lv_label_set_text(scrMain.ui_lblCdr, "Light:");

    scrMain.ui_lblCdrValue = lv_label_create(scrMain.ui_pnlMain);
    lv_obj_set_width(scrMain.ui_lblCdrValue, LV_SIZE_CONTENT);  /// 1
    lv_obj_set_height(scrMain.ui_lblCdrValue, LV_SIZE_CONTENT); /// 1
    lv_obj_set_x(scrMain.ui_lblCdrValue, 0);
    lv_obj_set_y(scrMain.ui_lblCdrValue, 30);
    lv_obj_set_align(scrMain.ui_lblCdrValue, LV_ALIGN_TOP_MID);
    lv_label_set_text(scrMain.ui_lblCdrValue, "cdr");

    scrMain.ui_Rotate = lv_button_create(scrMain.ui_pnlMain);
    lv_obj_set_width(scrMain.ui_Rotate, 100);
    lv_obj_set_height(scrMain.ui_Rotate, 50);
    lv_obj_set_align(scrMain.ui_Rotate, LV_ALIGN_BOTTOM_LEFT);
    lv_obj_add_flag(scrMain.ui_Rotate, LV_OBJ_FLAG_SCROLL_ON_FOCUS); /// Flags
    lv_obj_remove_flag(scrMain.ui_Rotate, LV_OBJ_FLAG_SCROLLABLE);   /// Flags

    scrMain.ui_Label1 = lv_label_create(scrMain.ui_Rotate);
    lv_obj_set_width(scrMain.ui_Label1, LV_SIZE_CONTENT);  /// 1
    lv_obj_set_height(scrMain.ui_Label1, LV_SIZE_CONTENT); /// 1
    lv_obj_set_align(scrMain.ui_Label1, LV_ALIGN_CENTER);
    lv_label_set_text(scrMain.ui_Label1, "Rotate");

    scrMain.ui_btnCount = lv_button_create(scrMain.ui_pnlMain);
    lv_obj_set_width(scrMain.ui_btnCount, 100);
    lv_obj_set_height(scrMain.ui_btnCount, 50);
    lv_obj_set_align(scrMain.ui_btnCount, LV_ALIGN_TOP_RIGHT);
    lv_obj_add_flag(scrMain.ui_btnCount, LV_OBJ_FLAG_SCROLL_ON_FOCUS); /// Flags
    lv_obj_remove_flag(scrMain.ui_btnCount, LV_OBJ_FLAG_SCROLLABLE);   /// Flags

    scrMain.ui_lblButton = lv_label_create(scrMain.ui_btnCount);
    lv_obj_set_width(scrMain.ui_lblButton, LV_SIZE_CONTENT);  /// 1
    lv_obj_set_height(scrMain.ui_lblButton, LV_SIZE_CONTENT); /// 1
    lv_obj_set_align(scrMain.ui_lblButton, LV_ALIGN_CENTER);
    lv_label_set_text(scrMain.ui_lblButton, "Add 1");

    scrMain.ui_lblCount = lv_label_create(scrMain.ui_pnlMain);
    lv_obj_set_width(scrMain.ui_lblCount, LV_SIZE_CONTENT);  /// 1
    lv_obj_set_height(scrMain.ui_lblCount, LV_SIZE_CONTENT); /// 1
    lv_obj_set_x(scrMain.ui_lblCount, 0);
    lv_obj_set_y(scrMain.ui_lblCount, 60);
    lv_label_set_text(scrMain.ui_lblCount, "Count:");

    scrMain.ui_lblCountValue = lv_label_create(scrMain.ui_pnlMain);
    lv_obj_set_width(scrMain.ui_lblCountValue, LV_SIZE_CONTENT);  /// 1
    lv_obj_set_height(scrMain.ui_lblCountValue, LV_SIZE_CONTENT); /// 1
    lv_obj_set_x(scrMain.ui_lblCountValue, 0);
    lv_obj_set_y(scrMain.ui_lblCountValue, 60);
    lv_obj_set_align(scrMain.ui_lblCountValue, LV_ALIGN_TOP_MID);
    lv_label_set_text(scrMain.ui_lblCountValue, "0");

    scrMain.ui_GradR = lv_obj_create(scrMain.ui_pnlMain);
    lv_obj_remove_style_all(scrMain.ui_GradR);
    lv_obj_set_height(scrMain.ui_GradR, 20);
    lv_obj_set_width(scrMain.ui_GradR, lv_pct(50));
    lv_obj_set_x(scrMain.ui_GradR, 0);
    lv_obj_set_y(scrMain.ui_GradR, -40);
    lv_obj_set_align(scrMain.ui_GradR, LV_ALIGN_BOTTOM_RIGHT);
    lv_obj_remove_flag(scrMain.ui_GradR, (lv_obj_flag_t)(LV_OBJ_FLAG_CLICKABLE | LV_OBJ_FLAG_SCROLLABLE)); /// Flags
    lv_obj_set_style_bg_color(scrMain.ui_GradR, lv_color_hex(0x000000), LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_bg_opa(scrMain.ui_GradR, 255, LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_bg_grad_color(scrMain.ui_GradR, lv_color_hex(0xFF0000), LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_bg_grad_dir(scrMain.ui_GradR, LV_GRAD_DIR_HOR, LV_PART_MAIN | LV_STATE_DEFAULT);

    scrMain.ui_GradG = lv_obj_create(scrMain.ui_pnlMain);
    lv_obj_remove_style_all(scrMain.ui_GradG);
    lv_obj_set_height(scrMain.ui_GradG, 20);
    lv_obj_set_width(scrMain.ui_GradG, lv_pct(50));
    lv_obj_set_x(scrMain.ui_GradG, 0);
    lv_obj_set_y(scrMain.ui_GradG, -20);
    lv_obj_set_align(scrMain.ui_GradG, LV_ALIGN_BOTTOM_RIGHT);
    lv_obj_remove_flag(scrMain.ui_GradG, (lv_obj_flag_t)(LV_OBJ_FLAG_CLICKABLE | LV_OBJ_FLAG_SCROLLABLE)); /// Flags
    lv_obj_set_style_bg_color(scrMain.ui_GradG, lv_color_hex(0x000000), LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_bg_opa(scrMain.ui_GradG, 255, LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_bg_grad_color(scrMain.ui_GradG, lv_color_hex(0x00FF00), LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_bg_grad_dir(scrMain.ui_GradG, LV_GRAD_DIR_HOR, LV_PART_MAIN | LV_STATE_DEFAULT);

    scrMain.ui_GradB = lv_obj_create(scrMain.ui_pnlMain);
    lv_obj_remove_style_all(scrMain.ui_GradB);
    lv_obj_set_height(scrMain.ui_GradB, 20);
    lv_obj_set_width(scrMain.ui_GradB, lv_pct(50));
    lv_obj_set_align(scrMain.ui_GradB, LV_ALIGN_BOTTOM_RIGHT);
    lv_obj_remove_flag(scrMain.ui_GradB, (lv_obj_flag_t)(LV_OBJ_FLAG_CLICKABLE | LV_OBJ_FLAG_SCROLLABLE)); /// Flags
    lv_obj_set_style_bg_color(scrMain.ui_GradB, lv_color_hex(0x000000), LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_bg_opa(scrMain.ui_GradB, 255, LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_bg_grad_color(scrMain.ui_GradB, lv_color_hex(0x0000FF), LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_bg_grad_dir(scrMain.ui_GradB, LV_GRAD_DIR_HOR, LV_PART_MAIN | LV_STATE_DEFAULT);

    lv_obj_add_event_cb(scrMain.ui_Rotate, ui_scrMain_event_Rotate, LV_EVENT_ALL, NULL);
    lv_obj_add_event_cb(scrMain.ui_btnCount, ui_scrMain_event_btnCount, LV_EVENT_ALL, NULL);

    byte updateResult = getupdateResult();
    if (updateResult != UPDATE_STATUS::UPDATE_STATUS_NONE)
    {
        switch (updateResult)
        {
        case UPDATE_STATUS::UPDATE_STATUS_FAIL_FILE_REQUEST:
            showDialog("Update failed (file request)", lv_color_hex(0xFF0000));
            break;
        case UPDATE_STATUS::UPDATE_STATUS_FAIL_GENERIC:
            showDialog("Update failed (generic)", lv_color_hex(0xFF0000));
            break;
        case UPDATE_STATUS::UPDATE_STATUS_FAIL_VERSION_REQUEST:
            showDialog("Update failed (version request)", lv_color_hex(0xFF0000));
            break;
        case UPDATE_STATUS::UPDATE_STATUS_FAIL_WIFI_CONNECTION:
            showDialog("Update failed (wifi connection)", lv_color_hex(0xFF0000));
            break;
        case UPDATE_STATUS::UPDATE_STATUS_SUCCESS:
            showDialog("Update success!", lv_color_hex(0x00FF00));
            break;
        }
        setupdateResult(0);
    }
}

ulong next_millis;
void ui_scrMain_loop()
{

    auto const now = millis();
    if (now > next_millis)
    {
        next_millis = now + 500;

        char text_buffer[32];
        sprintf(text_buffer, "%lu", now);
        lv_label_set_text(scrMain.ui_lblMillisecondsValue, text_buffer);

        // #ifdef BOARD_HAS_RGB_LED
        //         auto const rgb = (now / 2000) % 8;
        //         smartdisplay_led_set_rgb(rgb & 0x01, rgb & 0xi02, rgb & 0x04);
        // #endif

        // #ifdef BOARD_HAS_CDS
        //         auto cdr = analogReadMilliVolts(CDS);
        //         sprintf(text_buffer, "%d", cdr);
        //         lv_label_set_text(ui_lblCdrValue, text_buffer);
        // #endif
    }
}